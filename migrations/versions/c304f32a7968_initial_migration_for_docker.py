"""Initial migration for Docker

Revision ID: c304f32a7968
Revises: 
Create Date: 2025-05-07 22:43:57.082661

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c304f32a7968'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('subscription_plans',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('duration_days', sa.Integer(), nullable=False),
    sa.Column('features', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('subscription_plans', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_subscription_plans_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_subscription_plans_name'), ['name'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('user_subscriptions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('auto_renew', sa.Boolean(), nullable=False),
    sa.Column('payment_intent_id', sa.String(length=255), nullable=True),
    sa.Column('cancellation_reason', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['subscription_plans.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_subscriptions', schema=None) as batch_op:
        batch_op.create_index('idx_user_sub_end_date_status', ['end_date', 'status'], unique=False)
        batch_op.create_index('idx_user_sub_plan_id_status', ['plan_id', 'status'], unique=False)
        batch_op.create_index('idx_user_sub_user_id_start_date', ['user_id', 'start_date'], unique=False)
        batch_op.create_index('idx_user_sub_user_id_status', ['user_id', 'status'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_subscriptions_payment_intent_id'), ['payment_intent_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_subscriptions_status'), ['status'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_subscriptions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_subscriptions_status'))
        batch_op.drop_index(batch_op.f('ix_user_subscriptions_payment_intent_id'))
        batch_op.drop_index('idx_user_sub_user_id_status')
        batch_op.drop_index('idx_user_sub_user_id_start_date')
        batch_op.drop_index('idx_user_sub_plan_id_status')
        batch_op.drop_index('idx_user_sub_end_date_status')

    op.drop_table('user_subscriptions')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('subscription_plans', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_subscription_plans_name'))
        batch_op.drop_index(batch_op.f('ix_subscription_plans_is_active'))

    op.drop_table('subscription_plans')
    # ### end Alembic commands ###
